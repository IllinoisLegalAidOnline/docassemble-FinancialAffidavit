metadata:
  title: Financial affidavit
  short title: Financial affidavit
  comment: This program helps you make forms that provide financial information and documents to the other party in family law cases.
  authors:
    - Jim Graszer
    - Matt Newsted
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ILAO:ilao-interview-framework.yml
  - docassemble.ILAO:shared-basic-questions.yml
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - other_parties: ALPeopleList.using(there_are_any=True)
  - employment: DAList.using(object_type=Thing, complete_attribute='complete')
  - employment[i].address: ALAddress
  - court_list: ALCourtLoader.using(file_name='docassemble.ILAO:data/sources/il_courts.xlsx')
---
code: |
  al_form_type = 'existing_case'
  ilao_easy_form_title = "Financial affidavit"
  ilao_easy_form_url = "https://www.illinoislegalaid.org/legal-information/financial-affidavit"
  form_name = "Financial affidavit"
  github_user = 'IllinoisLegalAidOnline'
  github_repo_name = 'docassemble-FinancialAffidavit'
  allowed_courts = ['Circuit']
---
sections:
  - section_intro: Start
  - section_case: Case information
  - section_user: About you
  - section_income: Income
  - section_expenses: Expenses
  - section_debts: Debts
  - section_assets: Assets
  - section_final: Final steps
  - section_download: Download
---
#################### Interview order #####################
mandatory: True
code: |
  nav.set_section('section_intro')
  sees_nav_bar
  set_progress(5)
  how_to_use
  accept_terms
  if family_case == False:
    family_kickout
  set_progress(10)
  nav.set_section('section_case')
  users[0].name.first
  party_label
  other_parties[0].name.first
  case_county
  case_number
  filing_status
  set_progress(20)
  nav.set_section('section_user')
  if hide_contact == False:
    users[0].address.address
    users[0].phone_number
  users[0].birthdate
  household_expenses
  users_acknowledge
  set_progress(30)
  nav.set_section('section_income')
  if employment.there_are_any == True:
    employment.gather()

  if taxes_filed == True:
    taxes_filed_status

  set_progress(100)
  nav.set_section('section_download')
  forms_assembling
  get_docs_screen
---
id: welcome
question: |
  Financial Affidavit
subquestion: |
  Welcome to Illinois Legal Aid Online's Financial Affidavit program.

  To use this program, you must be asking or being asked to pay child support, 
  children's expenses, college expenses, spousal maintenance (alimony), or 
  attorney's fees.
field: sees_nav_bar
---
id: how to use
continue button field: how_to_use
question: |
  Instructions
subquestion: |
  To complete this program, you will need to know:

  * Your monthly income and expenses
  * Your expenses for children and other dependents, if any
  * Your income tax refunds or amounts owed for the last 2 years (federal and state)
  * Your debts and liabilities
  * Your assets, such as bank accounts, real estate, vehicles, and retirement benefits

  It could take 30 minutes to 60 minutes to finish this program. You can log in and save your work to return to later. 
 
  ${ collapse_template(help_example) }  

  Click on **{green words}** to learn what they mean. Some questions have a question mark in a circle 
  ${ fa_icon("question-circle", color_css="#0dcaf0" ) } that also gives help.
---
template: help_example
subject: |
  **You can expand sections like this to show more information.**
content: |  
  This is an example of help. Click again to hide.
---
id: family case 
question: |
  Do you have a family law case in Illinois?
subquestion: |
  If you have any active case or one where a judgment was already entered (Ex: divorce).
fields:
  - no label: family_case
    datatype: yesnoradio
---
id: family case kickout
event: family_kickout
question: |
  Sorry
subquestion: |
  You can only use this program if you have an active family law case in Illinois.
buttons:
  - Exit: exit
  - Restart: restart
---
############### CASE INFORMATION ###############
id: case county
question: |
  In which county was this case filed?
fields:
  - County: case_county
    code:
      court_list._load_courts()["address_county"].unique()
---
id: case number
question: |
  What is the case number?
subquestion: |
  ${ collapse_template(case_number_help) }
fields:
  - Case number: case_number
    maxlength: 19
---
template: case_number_help
subject: |
  **Learn about case numbers**
content: |  
  The case number should be on your court papers. Look at the Complaint or Petition, or the
  Summons if you received one. It is usually in the top-right part of the first page.
  
  If you started the case, the court clerk should have given you the case number.
---  
id: case filing status
question: |
  Are you filing your Financial Affidavit into a case that has a final 
  judgment or order?
subquestion: |
  For example, a Judgment of Dissolution of Marriage would be a final order in a divorce case.": 
fields:
  - Filing status: filing_status
    datatype: radio
    choices:
      - Pre-Judgment: pre_judgment
      - Post-Judement: post_judgment
---  
id: party label
question: |
  What is your party label in the case?
subquestion: |
  ${ collapse_template(which_party) }  
field: party_label
choices:
  - Petitioner: petitioner
  - Respondent: respondent
---
template: which_party
subject: |
  **Learn more about party labels**
content: |
  If you filed a new case, you are either the Plaintiff or the Petitioner.

  If someone filed the case against you, you are either the Defendant or the Respondent.

  The other court forms in the case should help you figure it out. Look at the top (the caption)
  of the Complaint or Petition. That form should have a label by your name.
---
id: your name
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question: |
  What is your name?
fields:
  - code: |
      users[0].name_fields()
---
code: |
  if party_label == 'petitioner':
    opposing_label = 'respondent'
  if party_label == 'respondent':
    opposing_label = 'petitioner'
---
id: other party name
sets:
  - other_parties[0].name.first
question: |
  What is the name of the ${ opposing_label }?
fields:
  - code: |
      other_parties[0].name_fields(person_or_business='person')
---
############### ABOUT YOU ###############
id: hide contact 
question: |
  Is your contact information is protected pursuant to court order because of 
  domestic violence or abuse?
fields:
  - no label: hide_contact
    datatype: yesnoradio
---
id: users address
sets:
  - users[0].address.address
  - users[0].address.city
  - users[0].address.state
  - users[0].address.zip
question: |
  What is your address?
fields:
  - Street address: users[0].address.address
    address autocomplete: True
  - Address line 2: users[0].address.unit
    required: False
  - City: users[0].address.city
  - State: users[0].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: users[0].address.zip
---
id: user phone
question: |
  What is your phone number?
fields:
  - Phone Number: users[0].phone_number
    datatype: al_international_phone
---
id: user birthdates
question: |
  When were you born?
fields:
  - Other Date of Birth Used: users[i].birthdate
    datatype: BirthDate
    alMax: ${ today().format("yyyy-MM-dd") }
---
id: user expenses
question: |
  Do you currently live with another adult, **not ${other_parties[0].name.full()}**,
  who helps you pay your expenses?
fields:
  - no label: household_expenses
    datatype: yesnoradio
---
id: user acknowledge
continue button field: users_acknowledge
question: |
  Accuracy is important
subquestion: |
  <div class="alert alert-info ilao-info" role="alert">
    <h2 class="h4">Important</h2>
    <p>If you intentionally or recklessly enter inaccurate or misleading information on this form, 
    you may face significant penalties and sanctions, including costs and attorney's fees.</p>
    <p>Do not file this document and the enclosures with the Circuit Clerk unless a local rule or 
    court order requires you to do so.</p>
    <p>Ask the Circuit Clerk where to find these rules.</p>
  </div>
---
########### INCOME ####################
id: income intro 
question: |
  Are you employed or do you have other forms of business income?
subquestion: |
  This includes income:

  - From employment by someone else;

  - From self-employment as a sole proprietorship or independent contractor;

  - As a member of a partnership;

  - As a member of a limited liability company (LLC) not treated as a corporation;

  - From a closely-held corporation;

  - From any other flow-through business entities 
fields:
  - no label: employment.there_are_any
    datatype: yesnoradio
---
code: |
  employment[i].type
  employment[i].name.text
  if employment[i].type == "employed":
    employment[i].frequency
  else:
    employment[i].income_last_year
    employment[i].perks
  employment[i].complete = True 
---
id: other employment
question: |
  Do you have any other employers or business to include?
subquestion: |
  So far you have told us about ${comma_and_list(employment.complete_elements())}.
fields:
  - no label: employment.there_is_another
    datatype: yesnoradio
---
id: employment info
question: |
  What is your ${ordinal(i)} source of employment or business income? 
fields:
  - "What type of employment or income is this?": employment[i].type
    choices:
			- Employed by someone else: employed
      - Own business as a sole proprietorship: own
      - Independent contractor: contractor
      - Member of a partnership: partnership
      - As a member of a limited liability company (LLC) not treated as a corporation: llc
			- A closely-held corporation: corp
			- Other flow-through business entity: other_entity
---
id: employer or business name 
question: |
  What is the name of this employer or business?
fields: 
  - Name: employment[i].name.text
  - Street address: employment[i].address.address
    address autocomplete: True
  - Address line 2: employment[i].address.unit
    required: False
  - City: employment[i].address.city
  - State: employment[i].address.state
    code: |
      states_list()
  - ZIP code: employment[i].address.zip
---
id: employer pay 
question: |
  How often are you paid?
fields: 
  - Pay period: employment[i].frequency
    choices:
      - Once a month: 12
      - Twice a month: 24
      - Every two weeks: 26
      - Once a week: 52
  - "Are you paid in cash?": employment[i].cash_payment
    datatype: yesnoradio
  - "What is the gross income (before taxes and deductions) so far this year?": employment[i].gross_income
    datatype: currency
---
id: business income 
question: 
  What was your total gross income (before taxes and deductions) last year, and so far this year?
subquestion:
  You must attach complete business federal and state business tax returns for the most recent tax year.
fields:
  - Last year (${ current_datetime().year - 1 }): employment[i].income_last_year
    datatype: currency
  - So far this year (${ current_datetime().year }): employment[i].income_current_year
    datatype: currency
  - note: |
      What were your necessary business expenses last year, and so far this year?
  - Last year (${ current_datetime().year - 1 }): employment[i].expenses_last_year
    datatype: currency  
  - So far this year (${ current_datetime().year }): employment[i].expenses_current_year
    datatype: currency
---
id: business perks
question: 
  Do you receive any of these perks from this business?
fields:
  - Perks (Check all that apply): employment[i].perks
    datatype: checkboxes
    choices: 
      - Reimbursed meals: meals
      - Company car: car
      - Free housing or housing allowance: housing
      - Other: other
    none of the above: False
  - Briefly describe other perk(s): employment[i].other_perks
    js show if: |
      val("employment[i].perks['other']")
---
id: filed taxes
question: |
  Did you file taxes last year?
fields:
  - no label: taxes_filed
    datatype: yesnoradio
---
id: filed taxes detail
question: |
  What was your tax filing status last year?
fields:
  - no label: taxes_filed_status
    datatype: radio
    choices: 
      - Married (Joint): joint
      - Married (Separate): separate
      - Single: single
      - Head of Household: household
  - I claim on my federal tax return: deduction_type
    datatype: radio
    choices: 
      - the standardized deduction: yes
      - itemized deductions: no
  - Gross income (before taxes and deductions) last year: gross_income_last_year
    datatype: currency
  - On my last tax return I claimed: tax_claimed
    datatype: checkboxes
    choices: 
      - Child tax credit: child_credit
      - Additional child tax credit: additional
      - Credit for other dependents: dependents
      - Earned Income Credit: eic
      - Dependent care credit: care
---



---
id: forms assembling
continue button field: forms_assembling
question: |
  Almost done
subquestion: |
  After you click **Next**, it may take a few moments to finish making your forms.
  
  ###### You do not need to refresh your screen. Hang in there!
  
  [NEWLINE]
---
id: get docs screen
event: get_docs_screen
question: |
  Download
subquestion: |
  Your form is ready. View and download your form below. Click **Make changes** to fix any mistakes.
  
  ${ action_button_html(url_action('review_answers'), label=':edit: Make changes', color='success', size="md") }

  ${ al_user_bundle.download_list_html() }

  [NEWLINE]

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

  Thank you for using ILAO Easy Forms!
under: |
  % if not user_logged_in():
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} **Sign-in**](${url_of('login', next=interview_url())}) or [**create**](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif

  ${ action_button_html(interview_url(i="docassemble.ILAO:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=user_info().question_id, easy_form_variable=user_info().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[instructions, financial_affidavit_bundle], filename="completed_financial_affidavit.pdf", title="Financial Affidavit Package", enabled=True)
---
objects:
  - financial_affidavit_bundle: ALDocumentBundle.using(title="Financial Affidavit", filename="fa_primary.pdf", enabled=True, elements=[
        fa_primary, 
        additional_employment_bundle,
      ])
---
objects:
  - instructions: ALDocument.using(title="Instructions", filename="instructions.pdf", enabled=True, has_addendum=False)
  - fa_primary: ALDocument.using(title="Financial Affidavit", filename="fa_primary.pdf", enabled=True, has_addendum=False)
---
############ FA PRIMARY DOCUMENT #############
attachment:
  - name: instructions
    variable name: instructions[i]
    filename: instructions
    pdf template file: instructions.pdf
---
attachment:
  - name: fa_primary
    variable name: fa_primary[i]
    filename: fa_primary
    pdf template file: fa_primary.pdf
    editable: False
    fields:
      - "county": ${ case_county }
      - "case_number": ${ case_number }
      - "pre-judgment": ${ filing_status == "pre_judgment" }
      - "post-judgment": ${ filing_status == "post_judgment" }
      - "petitioner_name": |
          % if party_label == 'petitioner':
          ${ users[0].name.full(middle='full') }
          % else:
          ${ other_parties[0].name.full(middle='full') }
          % endif
      - "respondent_name": |
          % if opposing_label == 'respondent':
          ${ other_parties[0].name.full(middle='full') }
          % else:
          ${ users[0].name.full(middle='full') }
          % endif
      - "petitioner_yes": ${ party_label == 'petitioner' }
      - "respondent_yes": ${ party_label == 'respondent' }
      - "date_affirm": ${ today().format('MM/dd/yyyy') }
      - "users_name": ${ users[0].name.full(middle='full') }
      - "users_phone_number": |
          % if not hide_contact:
          ${ users[0].address.line_two() }
          % endif
      - "users_address": |
          % if not hide_contact:
          ${ users[0].address.line_one(bare=True) }
          % endif
      - "users_address2": |
          % if not hide_contact:
          ${ users[0].address.line_two() }
          % endif
      - "users_birthdate": ${ users[0].birthdate.format('MM/dd/yyyy') }
      - "expenses_yes": ${ household_expenses == "yes"}
      - "expenses_no": ${ household_expenses == "no"}
      ## 6. My Employment/Business
      - "unemployed_yes": ${ employment.number_gathered() == 0 }  
      # employed
      - "employed_yes": ${ employment[0].type == "employed" }
      - "employer_name": |
          % if employment[0].type == "employed":
          ${ employment[0].name.text }
          % endif
      - "employer_address": |
          % if employment[0].type == "employed":
          ${ employment[0].address.line_one() }
          % endif
      - "employer_address2": |
          % if employment[0].type == "employed":
          ${ employment[0].address.line_two() }
          % endif
      - "paychecks_monthly": |
          % if employment[0].type == "employed":
          ${ employment[0].frequency == "12" }
          % endif
      - "paychecks_bi_monthly": |
          % if employment[0].type == "employed":
          ${ employment[0].frequency == "24" }
          % endif
      - "paychecks_two_weeks": |
          % if employment[0].type == "employed":
          ${ employment[0].frequency == "26" }
          % endif
      - "paychecks_weekly": |
          % if employment[0].type == "employed":
          ${ employment[0].frequency == "52" }
          % endif
      - "paychecks_cash": |
          % if employment[0].type == "employed":
          ${ employment[0].cash_payment }
          % endif
      - "income_gross": |
          % if employment[0].type == "employed":
          ${ nice_number(employment[0].gross_income) }
          % endif
      - "income_date": |
          % if employment[0].type == "employed":
          ${ today().format('MM/dd/yyyy') }
          % endif
      # business
      - "business_own": ${ employment[0].type == "own" }
      - "business_contractor": ${ employment[0].type == "contractor" }
      - "business_partnership": ${ employment[0].type == "partnership" }
      - "business_llc": ${ employment[0].type == "llc" }
      - "business_corporation": ${ employment[0].type == "corp" }
      - "business_other_entity": ${ employment[0].type == "other_entity" }
      - "business_name": |
          % if employment[0].type != "employed":
          ${ employment[0].name.text }
          % endif
      - "business_address": |
          % if employment[0].type != "employed":
          ${ employment[0].address.line_one() }
          % endif
      - "business_address2": |
          % if employment[0].type != "employed":
          ${ employment[0].address.line_two() }
          % endif
      - "business_gross_last_year": |
          % if employment[0].type != "employed":
          ${ nice_number(employment[0].income_last_year) }
          % endif
      - "business_gross_current_year": |
          % if employment[0].type != "employed":
          ${ nice_number(employment[0].income_current_year) }
          % endif           
      - "business_expense_last_year": |
          % if employment[0].type != "employed":
          ${ nice_number(employment[0].expenses_last_year) }
          % endif
      - "business_expense_current_year": |
          % if employment[0].type != "employed":
          ${ nice_number(employment[0].expenses_current_year) }
          % endif
      - "business_meals": |
          % if employment[0].type != "employed":
          ${ employment[0].perks['meals'] }
          % endif
      - "business_car": |
          % if employment[0].type != "employed":
          ${ employment[0].perks['car'] }
          % endif
      - "business_housing": |
          % if employment[0].type != "employed":
          ${ employment[0].perks['housing'] }
          % endif
      - "business_other": |
          % if employment[0].type != "employed":
          ${ employment[0].perks['other'] }
          % endif
      - "business_other_detail": |
          % if employment[0].type != "employed":
          ${ employment[0].other_perks }
          % endif
      - "employment_addendum_yes": ${ employment.number_gathered() > 1 }

      ## Page 3:  Gross income/taxes from last year, monthly gross income sources
      - "married_joint_yes": ${ taxes_filed_status == "joint" }  
      - "married_separate_yes": ${ taxes_filed_status == "separate" }  
      - "single_yes": ${ taxes_filed_status == "single" }  
      - "taxes_household": ${ taxes_filed_status == "household" }  
      - "taxes_not_filed": ${ not taxes_filed }   
      - "deduction_standard": |
          % if taxes_filed:
          ${ deduction_type }
          % endif
      - "deduction_itemized": |
          % if taxes_filed:
          ${ not deduction_type }
          % endif
      - "Gross income (before taxes and deductions) last year": |
          % if taxes_filed:
          ${ nice_number(gross_income_last_year) }
          % endif
      - "Child Tax Credit": |
          % if taxes_filed:
          ${ tax_claimed['child_credit'] }
          % endif
      - "Additional child tax credit": |
          % if taxes_filed:
          ${ tax_claimed['additional'] }
          % endif
      - "Credit for other dependents": |
          % if taxes_filed:
          ${ tax_claimed['dependents'] }
          % endif
      - "Earned Income Credit": |
          % if taxes_filed:
          ${ tax_claimed['eic'] }
          % endif
      - "Dependent care credit": |
          % if taxes_filed:
          ${ tax_claimed['care'] }
          % endif
---
############ FA EMPLOYMENT/BUSINESS INCOME ADDENDUM #############
objects:
  - employment[i].additional_employment: ALDocument.using(title="FA Additional Employment Business", filename="fa_additional_employment_business.pdf", has_addendum=False)
---
objects:
  - additional_employment_bundle: ALDocumentBundle.using(elements=[], title= "FA Additional Employment Bundle", filename="fa_additional_employment_business.pdf", has_addendum=False)
---
reconsider: True
code: |
  employment_to_bundle = []
  additional_employment_bundle.enabled = False

  
  for index, el in enumerate(employment):
    # No need for additional employment or business income unless employment.number_gathered() >= 1
    if index == 0:
      el.additional_employment.enabled = False
    else:
      el.additional_employment.enabled = True
      additional_employment_bundle.enabled = True
      employment_to_bundle.append(el.additional_employment)

  additional_employment_bundle.elements = employment_to_bundle
  complete_additional_employment = True
---
attachment:
  variable name: employment[i].additional_employment[j]
  name: additional_employment
  filename: additional_employment
  skip undefined: True
  editable: False
  pdf template file: fa_additional_employment_business.pdf
  fields:
      - "county": ${ case_county }
      - "case_number": ${ case_number }
      - "pre-judgment": ${ filing_status == "pre_judgment" }
      - "post-judgment": ${ filing_status == "post_judgment" }
      - "petitioner_name": |
          % if party_label == 'petitioner':
          ${ users[0].name.full(middle='full') }
          % else:
          ${ other_parties[0].name.full(middle='full') }
          % endif
      - "respondent_name": |
          % if opposing_label == 'respondent':
          ${ other_parties[0].name.full(middle='full') }
          % else:
          ${ users[0].name.full(middle='full') }
          % endif
      - "petitioner_yes": ${ party_label == 'petitioner' }
      - "respondent_yes": ${ party_label == 'respondent' }

      - "employed_yes": ${ employment[i].type == 'employed' }
      - "employer_name": |
          % if employment[i].type == "employed":
          ${ employment[i].name.text }
          % endif
      - "employer_address": |
          % if employment[i].type == "employed":
          ${ employment[i].address.line_one() }
          % endif
      - "employer_address2": |
          % if employment[i].type == "employed":
          ${ employment[i].address.line_two() }
          % endif
      - "paychecks_monthly": |
          % if employment[i].type == "employed":
          ${ employment[i].frequency == "12" }
          % endif
      - "paychecks_bi_monthly": |
          % if employment[i].type == "employed":
          ${ employment[i].frequency == "24" }
          % endif
      - "paychecks_two_weeks": |
          % if employment[i].type == "employed":
          ${ employment[i].frequency == "26" }
          % endif
      - "paychecks_weekly": |
          % if employment[i].type == "employed":
          ${ employment[i].frequency == "52" }
          % endif
      - "paychecks_cash": |
          % if employment[i].type == "employed":
          ${ employment[i].cash_payment }
          % endif
      - "income_gross": |
          % if employment[i].type == "employed":
          ${ nice_number(employment[i].gross_income) }
          % endif
      - "income_date": |
          % if employment[i].type == "employed":
          ${ today().format('MM/dd/yyyy') }
          % endif
      # business
      - "business_own": ${ employment[i].type == "own" }
      - "business_contractor": ${ employment[i].type == "contractor" }
      - "business_partnership": ${ employment[i].type == "partnership" }
      - "business_llc": ${ employment[i].type == "llc" }
      - "business_corporation": ${ employment[i].type == "corp" }
      - "business_other_entity": ${ employment[i].type == "other_entity" }
      - "business_name": |
          % if employment[i].type != "employed":
          ${ employment[i].name.text }
          % endif
      - "business_address": |
          % if employment[i].type != "employed":
          ${ employment[i].address.line_one() }
          % endif
      - "business_address2": |
          % if employment[i].type != "employed":
          ${ employment[i].address.line_two() }
          % endif
      - "business_gross_last_year": |
          % if employment[i].type != "employed":
          ${ nice_number(employment[i].income_last_year) }
          % endif
      - "business_gross_current_year": |
          % if employment[i].type != "employed":
          ${ nice_number(employment[i].income_current_year) }
          % endif           
      - "business_expense_last_year": |
          % if employment[i].type != "employed":
          ${ nice_number(employment[i].expenses_last_year) }
          % endif
      - "business_expense_current_year": |
          % if employment[i].type != "employed":
          ${ nice_number(employment[i].expenses_current_year) }
          % endif
      - "business_meals": |
          % if employment[i].type != "employed":
          ${ employment[i].perks['meals'] }
          % endif
      - "business_car": |
          % if employment[i].type != "employed":
          ${ employment[i].perks['car'] }
          % endif
      - "business_housing": |
          % if employment[i].type != "employed":
          ${ employment[i].perks['housing'] }
          % endif
      - "business_other": |
          % if employment[i].type != "employed":
          ${ employment[i].perks['other'] }
          % endif
      - "business_other_detail": |
          % if employment[i].type != "employed":
          ${ employment[i].other_perks }
          % endif
---